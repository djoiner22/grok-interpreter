[tool.poetry]
name = "grokit"
packages = [
    {include = "interpreter"},
    {include = "scripts"},
]
version = "1.0.0"
description = "Grok'ed-Interpreter: AI-powered code execution and project generation with Grok-Cursor integration"
authors = [
    {name = "Grok'ed-Interpreter Team"},
]
readme = "README.md"

[tool.poetry.dependencies]

# Optional [os] dependencies
opencv-python = { version = "^4.8.1.78", optional = true }
plyer = { version = "^2.1.0", optional = true }
pywinctl = { version = "^0.3", optional = true }
pytesseract = { version = "^0.3.10", optional = true }
sentence-transformers = { version = "^2.5.1", optional = true }
nltk = { version = "^3.8.1", optional = true }
ipywidgets = { version = "^8.1.2", optional = true }
torch = { version = "^2.2.1", optional = true }
timm = { version = "^0.9.16", optional = true }
screeninfo = { version = "^0.8.1", optional = true }

# Optional [safe] dependencies
semgrep = { version = "^1.52.0", optional = true }

# Optional [local] dependencies
transformers = { version = "4.41.2", optional = true }
einops = { version = "^0.8.0", optional = true }
torchvision = { version = "^0.18.0", optional = true }
easyocr = { version = "^1.7.1", optional = true }

# Optional [server] dependencies
janus = { version = "^1.0.0", optional = true }

# Required dependencies
python = ">=3.8"
setuptools = "*"
astor = "^0.8.1"
git-python = "^1.0.3"
inquirer = "^3.1.3"
pyyaml = "^6.0.1"
rich = "^13.4.2"
six = "^1.16.0"
tokentrim = "^0.1.13"
wget = "^3.2"
psutil = "^5.9.6"
pyreadline3 = {version = "^3.4.1", markers = "sys_platform == 'win32'"}
html2image = "^2.0.4.3"
send2trash = "^1.8.2"
ipykernel = "^6.26.0"
jupyter-client = "^8.6.0"
matplotlib = "^3.8.2"
toml = "^0.10.2"
tiktoken = "^0.7.0"
platformdirs = "^4.2.0"
pydantic = "^2.6.4"
google-generativeai = "^0.7.1"
pyperclip = "^1.9.0"
yaspin = "^3.0.2"
shortuuid = "^1.0.13"
litellm = "^1.41.26"
starlette = "^0.37.2"
html2text = "^2024.2.26"
selenium = "^4.24.0"
webdriver-manager = "^4.0.2"
anthropic = "^0.37.1"
pyautogui = "^0.9.54"
typer = "^0.12.5"
fastapi = "^0.111.0"
uvicorn = "^0.30.1"

[tool.poetry.extras]
os = ["opencv-python", "pyautogui", "plyer", "pywinctl", "pytesseract", "sentence-transformers", "ipywidgets", "timm", "screeninfo"]
safe = ["semgrep"]
local = ["opencv-python", "pytesseract", "torch", "transformers", "einops", "torchvision", "easyocr"]
server = ["fastapi", "janus", "uvicorn"]

[tool.poetry.group.dev.dependencies]
black = "^23.10.1"
isort = "^5.12.0"
pre-commit = "^3.5.0"
pytest = "^7.4.0"
sniffio = "^1.3.0"
websockets = "^13.1"
websocket-client = "^1.8.0"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grok-interpreter"
version = "1.0.0"
description = "Grok'ed-Interpreter: AI-powered code execution and project generation with Grok-Cursor integration"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "grok",
    "cursor",
    "ai",
    "code-execution",
    "project-generation",
    "llm",
    "automation",
    "development-tools",
]
authors = [
    {name = "Grok'ed-Interpreter Team"},
]
dependencies = [
    "openai",
    "anthropic",
    "litellm>=1.17.9",
    "tokentrim>=0.1.13",
    "aifs>=0.0.15",
    "rich",
    "python-dotenv",
    "pathspec",
    "pathvalidate",
    "toml",
    "appdirs",
    "yaspin",
    "inquirer",
    "psutil",
    "html2text",
    "send2trash",
    "wcwidth",
    "platformdirs",
    "six",
    "tqdm",
    "opencv-python",
    "pyautogui",
    "playsound==1.2.2",
    "pydub",
    "SpeechRecognition",
    "pyaudio",
    "matplotlib",
    "requests",
    "google-search-results",
    "beautifulsoup4",
    "flask",
    "flask-socketio",
    "flask-cors",
    "eventlet",
]

[project.optional-dependencies]
server = [
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "flask-cors>=4.0.0",
    "python-socketio>=5.8.0",
    "eventlet>=0.33.0",
]
ui = [
    "flask",
    "flask-socketio",
    "flask-cors",
]
safe = [
    "semgrep",
]
local = [
    "jupyter_client",
    "ipykernel",
    "matplotlib",
]
os = [
    "nativeshell",
    "pytesseract",
    "easyocr",
    "pywinctl",
    "clipboard",
    "pynput",
]

[project.urls]
Homepage = "https://github.com/your-username/grok-interpreter"
Documentation = "https://grok-interpreter.readthedocs.io"
Repository = "https://github.com/your-username/grok-interpreter.git"
"Bug Tracker" = "https://github.com/your-username/grok-interpreter/issues"
Changelog = "https://github.com/your-username/grok-interpreter/blob/main/CHANGELOG.md"

[project.scripts]
grok-interpreter = "interpreter:main"
grok-chat = "interpreter.terminal_interface.start_terminal_interface:main"
grok-server = "backend.server:run_server"

[tool.setuptools]
packages = ["interpreter", "backend"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yaml", "*.yml"]
"interpreter" = ["**/*.py", "**/*.md"]
"backend" = ["**/*.py", "requirements.txt"]

[tool.setuptools.exclude-package-data]
"*" = ["tests/*", "ui/node_modules/*", "*.pyc", "__pycache__/*"]

[tool.black]
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
